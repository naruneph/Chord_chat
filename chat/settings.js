class Settings {

    constructor(){
        this.len_sid_random = 13;
        this.key_length = "1024";
        this.exp = "03";
        this.g = new BigInteger("31", 10);
        this.qmod = new BigInteger("1205156213460516294276038011098783037428475274251229971327058470979054415841306114445046929130670807336613570738952006098251824478525291315971365353402504611531367372670536703348123007294680829887020513584624726600189364717085162921889329599071881596888429934762044470097788673059921772650773521873603874984881875042154463169647779984441228936206496905064565147296499973963182632029642323604865192473605840717232357219244260470063729922144429668263448160459816959", 10);
        this.pmod = new BigInteger("2410312426921032588552076022197566074856950548502459942654116941958108831682612228890093858261341614673227141477904012196503648957050582631942730706805009223062734745341073406696246014589361659774041027169249453200378729434170325843778659198143763193776859869524088940195577346119843545301547043747207749969763750084308926339295559968882457872412993810129130294592999947926365264059284647209730384947211681434464714438488520940127459844288859336526896320919633919", 10);
        this.random = new SecureRandom();
    }

    generatePair() {
        let rsaPrivateKey = new RSAKey();
        rsaPrivateKey.generate(this.key_length, this.exp);
        let rsaPubKey = cryptico.publicKeyString(rsaPrivateKey);
        return [rsaPrivateKey, rsaPubKey];
    }

    generateNumber() {
        let randBytes = new Array(this.len_sid_random);
        this.random.nextBytes(randBytes);
        return new BigInteger(randBytes);
    }

    generateExpPair() {
        let randBigNumber = this.generateNumber();
        randBigNumber = randBigNumber.mod(this.qmod);
        let b = this.g.modPow(randBigNumber, this.pmod);
        return [randBigNumber, b];
    }
};
module.exports = Settings;

